#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int mod_exp(int base, int exp, int mod) {
    int result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1) {
            result = (result * base) % mod;
        }
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}
int rsa_decrypt(int ciphertext, int d, int n) {
    return mod_exp(ciphertext, d, n);
}
void frequency_analysis(int *ciphertext, int length, int d, int n) {
    int freq[26] = {0}; 
    for (int i = 0; i < length; i++) {
        int decrypted = rsa_decrypt(ciphertext[i], d, n);
        if (decrypted >= 0 && decrypted < 26) {
            freq[decrypted]++;
        }
    }
    printf("Frequency Analysis:\n");
    for (int i = 0; i < 26; i++) {
        printf("%c: %d\n", 'A' + i, freq[i]);
    }
}
int main() {
    int n = 3233;  
    int d = 2011;  
    int ciphertext[] = {2190, 2183, 2531, 3001, 500, 200, 142, 3001, 1234};
    int length = sizeof(ciphertext) / sizeof(ciphertext[0]);
    printf("Ciphertext Decryption and Frequency Analysis:\n");
    frequency_analysis(ciphertext, length, d, n);
    return 0;
}
