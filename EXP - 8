#include <stdio.h>
#include <string.h>
#include <ctype.h>
void generateCipher(char keyword[], char cipher[]) {
    int used[26] = {0};  
    int i, j = 0;
    for (i = 0; i < strlen(keyword); i++) {
        char c = toupper(keyword[i]);
        if (!used[c - 'A']) {
            cipher[j++] = c;
            used[c - 'A'] = 1;
        }
    }
    for (i = 0; i < 26; i++) {
        if (!used[i]) {
            cipher[j++] = 'A' + i;
        }
    }
}
void encrypt(char plain[], char cipher[], char ciphertext[]) {
    for (int i = 0; plain[i] != '\0'; i++) {
        if (isalpha(plain[i])) {
            char c = toupper(plain[i]);
            ciphertext[i] = cipher[c - 'A'];
        } else {
            ciphertext[i] = plain[i]; 
        }
    }
    ciphertext[strlen(plain)] = '\0'; 
}
void decrypt(char ciphertext[], char cipher[], char decrypted[]) {
    for (int i = 0; ciphertext[i] != '\0'; i++) {
        if (isalpha(ciphertext[i])) {
            char c = toupper(ciphertext[i]);
            for (int j = 0; j < 26; j++) {
                if (cipher[j] == c) {
                    decrypted[i] = 'A' + j;
                    break;
                }
            }
        } else {
            decrypted[i] = ciphertext[i];  
        }
    }
    decrypted[strlen(ciphertext)] = '\0'; 
}

int main() {
    char keyword[] = "CIPHER";
    char plain[] = "attack at dawn";
    char cipher[26];
    char ciphertext[100], decrypted[100];
    generateCipher(keyword, cipher);
    encrypt(plain, cipher, ciphertext);
    decrypt(ciphertext, cipher, decrypted);
    printf("Keyword: %s\n", keyword);
    printf("Plaintext: %s\n", plain);
    printf("Ciphertext: %s\n", ciphertext);
    printf("Decrypted text: %s\n", decrypted);
	return 0;
}
