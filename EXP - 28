#include <stdio.h>
#include <math.h>
unsigned long long mod_exp(unsigned long long base, unsigned long long exp, unsigned long long mod) {
    unsigned long long result = 1;
    base = base % mod;
    while (exp > 0) {
        if (exp % 2 == 1) {
            result = (result * base) % mod;
        }
        exp = exp >> 1;
        base = (base * base) % mod;
    }
    return result;
}
int main() {
    unsigned long long a = 5;  
    unsigned long long q = 23;    
    unsigned long long x_A = 6;   
    unsigned long long x_B = 15;  
    unsigned long long A = mod_exp(a, x_A, q);
    unsigned long long B = mod_exp(a, x_B, q); 
    unsigned long long received_A = A;  
    unsigned long long received_B = B; 
    unsigned long long shared_secret_A = mod_exp(received_B, x_A, q); 
    unsigned long long shared_secret_B = mod_exp(received_A, x_B, q); 
    printf("Alice's Public Value (A): %llu\n", A);
    printf("Bob's Public Value (B): %llu\n", B);
    printf("Alice's Computed Shared Secret: %llu\n", shared_secret_A);
    printf("Bob's Computed Shared Secret: %llu\n", shared_secret_B);
    return 0;
}
